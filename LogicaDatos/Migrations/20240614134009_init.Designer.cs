// <auto-generated />
using System;
using LogicaDatos.Repositorios;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LogicaDatos.Migrations
{
    [DbContext(typeof(ObligatorioContext))]
    [Migration("20240614134009_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LogicaNegocio.Dominio.Articulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoProveedor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CodigoProveedor")
                        .IsUnique();

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Articulos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CodigoProveedor = "1234567890123",
                            Descripcion = "Calculadora de bolsillo Casio",
                            Nombre = "Calculadora Casio",
                            Precio = 300,
                            Stock = 10
                        },
                        new
                        {
                            Id = 2,
                            CodigoProveedor = "1234567890124",
                            Descripcion = "500 hojas para imprimir en formato A4",
                            Nombre = "Resma A4",
                            Precio = 250,
                            Stock = 50
                        },
                        new
                        {
                            Id = 3,
                            CodigoProveedor = "1234567890125",
                            Descripcion = "Bluetooth o conexión USB, cable desmontable",
                            Nombre = "Auriculares con Micrófono",
                            Precio = 500,
                            Stock = 40
                        },
                        new
                        {
                            Id = 4,
                            CodigoProveedor = "1234567890126",
                            Descripcion = "Soporte lumbar, altura ajustable y base giratoria con ruedas",
                            Nombre = "Silla De Escritorio",
                            Precio = 3200,
                            Stock = 20
                        },
                        new
                        {
                            Id = 5,
                            CodigoProveedor = "1234597890124",
                            Descripcion = "Block de notas autoadhesivas",
                            Nombre = "Notas Adhesivas",
                            Precio = 50,
                            Stock = 100
                        },
                        new
                        {
                            Id = 6,
                            CodigoProveedor = "1274597890124",
                            Descripcion = "100 unidades",
                            Nombre = "Bandas Elásticas",
                            Precio = 150,
                            Stock = 90
                        },
                        new
                        {
                            Id = 7,
                            CodigoProveedor = "1834597890124",
                            Descripcion = "Hasta 100 hojas",
                            Nombre = "Engrampadora",
                            Precio = 800,
                            Stock = 10
                        },
                        new
                        {
                            Id = 8,
                            CodigoProveedor = "1236597890124",
                            Descripcion = "HD, FullHD y 4K",
                            Nombre = "Cable HDMI",
                            Precio = 200,
                            Stock = 10
                        });
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DistanciaHastaDeposito")
                        .HasColumnType("int");

                    b.Property<string>("RazonSocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rut")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("Id");

                    b.HasIndex("Rut")
                        .IsUnique()
                        .HasFilter("[Rut] IS NOT NULL");

                    b.ToTable("Clientes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DistanciaHastaDeposito = 98,
                            RazonSocial = "Fleetium Macs",
                            Rut = "123456789012"
                        },
                        new
                        {
                            Id = 2,
                            DistanciaHastaDeposito = 101,
                            RazonSocial = "Pink Folks",
                            Rut = "987654321098"
                        },
                        new
                        {
                            Id = 3,
                            DistanciaHastaDeposito = 96,
                            RazonSocial = "Thurston & Kim Co.",
                            Rut = "111222333444"
                        },
                        new
                        {
                            Id = 4,
                            DistanciaHastaDeposito = 94,
                            RazonSocial = "Nueva Helvecia Dolls",
                            Rut = "111222333555"
                        },
                        new
                        {
                            Id = 5,
                            DistanciaHastaDeposito = 82,
                            RazonSocial = "Fenix",
                            Rut = "111222333666"
                        },
                        new
                        {
                            Id = 6,
                            DistanciaHastaDeposito = 91,
                            RazonSocial = "AB/CD",
                            Rut = "111222333777"
                        });
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Linea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticuloId")
                        .HasColumnType("int");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("int");

                    b.Property<int>("PreciodUnitario")
                        .HasColumnType("int");

                    b.Property<int>("UnidadesSolicitadas")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloId");

                    b.HasIndex("PedidoId");

                    b.ToTable("Lineas", (string)null);
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.MovimientoStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticuloId")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("TipoMovimientoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloId");

                    b.HasIndex("TipoMovimientoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("MovimientosDeStock", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArticuloId = 1,
                            Cantidad = 10,
                            Fecha = new DateTime(2024, 6, 14, 10, 40, 8, 913, DateTimeKind.Local).AddTicks(1719),
                            TipoMovimientoId = 1,
                            UsuarioId = 3
                        });
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Parametro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Parametros", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "IVA",
                            Valor = 0.18m
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "RecargoComun_DistanciaMayor100",
                            Valor = 0.05m
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "RecargoComun_DistanciaMenor100",
                            Valor = 0m
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "RecargoExpress_Plazo1Dia",
                            Valor = 0.15m
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "RecargoExpress_PlazoMayor1Dia",
                            Valor = 0.10m
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "TopeDeMovimientos",
                            Valor = 20m
                        });
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaEntrega")
                        .HasColumnType("date");

                    b.Property<decimal>("Iva")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Recargo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Pedidos", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("Pedido");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.TipoMovimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("TiposDeMovimientos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Venta"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Compra"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Devolucion"
                        });
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContraseniaEncriptada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(24)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "Admin",
                            Contraseña = "Passw0rd!",
                            Email = "admin@admin.com",
                            Nombre = "Sys",
                            Tipo = "Administrador"
                        },
                        new
                        {
                            Id = 2,
                            Apellido = "Planta",
                            Contraseña = "Passw0rd!",
                            Email = "rplanta@lz.com",
                            Nombre = "Roberto",
                            Tipo = "Estandar"
                        },
                        new
                        {
                            Id = 3,
                            Apellido = "Blanco",
                            Contraseña = "Passw0rd!",
                            Email = "jblanco@tws.com",
                            Nombre = "Jacobo",
                            Tipo = "Encargado"
                        });
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.PedidoComun", b =>
                {
                    b.HasBaseType("LogicaNegocio.Dominio.Pedido");

                    b.Property<int>("PlazoEstipulado")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("PedidoComun");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.PedidoExpress", b =>
                {
                    b.HasBaseType("LogicaNegocio.Dominio.Pedido");

                    b.Property<int>("PlazoEstipulado")
                        .HasColumnType("int");

                    b.ToTable("Pedidos", t =>
                        {
                            t.Property("PlazoEstipulado")
                                .HasColumnName("PedidoExpress_PlazoEstipulado");
                        });

                    b.HasDiscriminator().HasValue("PedidoExpress");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Cliente", b =>
                {
                    b.OwnsOne("LogicaNegocio.ValueObjects.Direccion", "Direccion", b1 =>
                        {
                            b1.Property<int>("ClienteId")
                                .HasColumnType("int");

                            b1.HasKey("ClienteId");

                            b1.ToTable("Clientes");

                            b1.WithOwner()
                                .HasForeignKey("ClienteId");

                            b1.OwnsOne("LogicaNegocio.ValueObjects.Calle", "Calle", b2 =>
                                {
                                    b2.Property<int>("DireccionId")
                                        .HasColumnType("int");

                                    b2.Property<string>("Valor")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("DireccionId");

                                    b2.ToTable("Clientes");

                                    b2.WithOwner()
                                        .HasForeignKey("DireccionId");

                                    b2.HasData(
                                        new
                                        {
                                            DireccionId = 1,
                                            Valor = "Ciudadela"
                                        },
                                        new
                                        {
                                            DireccionId = 2,
                                            Valor = "Reconquista"
                                        },
                                        new
                                        {
                                            DireccionId = 3,
                                            Valor = "Durazno"
                                        },
                                        new
                                        {
                                            DireccionId = 4,
                                            Valor = "San Jose"
                                        },
                                        new
                                        {
                                            DireccionId = 5,
                                            Valor = "Maldonado"
                                        },
                                        new
                                        {
                                            DireccionId = 6,
                                            Valor = "Canelones"
                                        });
                                });

                            b1.OwnsOne("LogicaNegocio.ValueObjects.Ciudad", "Ciudad", b2 =>
                                {
                                    b2.Property<int>("DireccionId")
                                        .HasColumnType("int");

                                    b2.Property<string>("Valor")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("DireccionId");

                                    b2.ToTable("Clientes");

                                    b2.WithOwner()
                                        .HasForeignKey("DireccionId");

                                    b2.HasData(
                                        new
                                        {
                                            DireccionId = 1,
                                            Valor = "Montevideo"
                                        },
                                        new
                                        {
                                            DireccionId = 2,
                                            Valor = "Montevideo"
                                        },
                                        new
                                        {
                                            DireccionId = 3,
                                            Valor = "Montevideo"
                                        },
                                        new
                                        {
                                            DireccionId = 4,
                                            Valor = "Montevideo"
                                        },
                                        new
                                        {
                                            DireccionId = 5,
                                            Valor = "Montevideo"
                                        },
                                        new
                                        {
                                            DireccionId = 6,
                                            Valor = "Montevideo"
                                        });
                                });

                            b1.OwnsOne("LogicaNegocio.ValueObjects.NumeroPuerta", "NumeroPuerta", b2 =>
                                {
                                    b2.Property<int>("DireccionId")
                                        .HasColumnType("int");

                                    b2.Property<string>("Valor")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("DireccionId");

                                    b2.ToTable("Clientes");

                                    b2.WithOwner()
                                        .HasForeignKey("DireccionId");

                                    b2.HasData(
                                        new
                                        {
                                            DireccionId = 1,
                                            Valor = "1180"
                                        },
                                        new
                                        {
                                            DireccionId = 2,
                                            Valor = "600"
                                        },
                                        new
                                        {
                                            DireccionId = 3,
                                            Valor = "902"
                                        },
                                        new
                                        {
                                            DireccionId = 4,
                                            Valor = "1060"
                                        },
                                        new
                                        {
                                            DireccionId = 5,
                                            Valor = "2010"
                                        },
                                        new
                                        {
                                            DireccionId = 6,
                                            Valor = "1110"
                                        });
                                });

                            b1.Navigation("Calle")
                                .IsRequired();

                            b1.Navigation("Ciudad")
                                .IsRequired();

                            b1.Navigation("NumeroPuerta")
                                .IsRequired();

                            b1.HasData(
                                new
                                {
                                    ClienteId = 1
                                },
                                new
                                {
                                    ClienteId = 2
                                },
                                new
                                {
                                    ClienteId = 3
                                },
                                new
                                {
                                    ClienteId = 4
                                },
                                new
                                {
                                    ClienteId = 5
                                },
                                new
                                {
                                    ClienteId = 6
                                });
                        });

                    b.Navigation("Direccion")
                        .IsRequired();
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Linea", b =>
                {
                    b.HasOne("LogicaNegocio.Dominio.Articulo", "Articulo")
                        .WithMany()
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogicaNegocio.Dominio.Pedido", null)
                        .WithMany("Lineas")
                        .HasForeignKey("PedidoId");

                    b.Navigation("Articulo");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.MovimientoStock", b =>
                {
                    b.HasOne("LogicaNegocio.Dominio.Articulo", "Articulo")
                        .WithMany()
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogicaNegocio.Dominio.TipoMovimiento", "TipoMovimiento")
                        .WithMany()
                        .HasForeignKey("TipoMovimientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogicaNegocio.Dominio.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("TipoMovimiento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Pedido", b =>
                {
                    b.HasOne("LogicaNegocio.Dominio.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Pedido", b =>
                {
                    b.Navigation("Lineas");
                });
#pragma warning restore 612, 618
        }
    }
}
